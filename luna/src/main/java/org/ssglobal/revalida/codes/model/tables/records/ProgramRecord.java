/*
 * This file is generated by jOOQ.
 */
package org.ssglobal.revalida.codes.model.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.ssglobal.revalida.codes.model.tables.Program;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProgramRecord extends UpdatableRecordImpl<ProgramRecord> implements Record4<Integer, Integer, String, String> {

    private static final long serialVersionUID = -1656216055;

    /**
     * Setter for <code>public.program.program_id</code>.
     */
    public ProgramRecord setProgramId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.program.program_id</code>.
     */
    public Integer getProgramId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.program.program_code</code>.
     */
    public ProgramRecord setProgramCode(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.program.program_code</code>.
     */
    public Integer getProgramCode() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.program.program_title</code>.
     */
    public ProgramRecord setProgramTitle(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.program.program_title</code>.
     */
    public String getProgramTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.program.major</code>.
     */
    public ProgramRecord setMajor(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.program.major</code>.
     */
    public String getMajor() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Program.PROGRAM.PROGRAM_ID;
    }

    @Override
    public Field<Integer> field2() {
        return Program.PROGRAM.PROGRAM_CODE;
    }

    @Override
    public Field<String> field3() {
        return Program.PROGRAM.PROGRAM_TITLE;
    }

    @Override
    public Field<String> field4() {
        return Program.PROGRAM.MAJOR;
    }

    @Override
    public Integer component1() {
        return getProgramId();
    }

    @Override
    public Integer component2() {
        return getProgramCode();
    }

    @Override
    public String component3() {
        return getProgramTitle();
    }

    @Override
    public String component4() {
        return getMajor();
    }

    @Override
    public Integer value1() {
        return getProgramId();
    }

    @Override
    public Integer value2() {
        return getProgramCode();
    }

    @Override
    public String value3() {
        return getProgramTitle();
    }

    @Override
    public String value4() {
        return getMajor();
    }

    @Override
    public ProgramRecord value1(Integer value) {
        setProgramId(value);
        return this;
    }

    @Override
    public ProgramRecord value2(Integer value) {
        setProgramCode(value);
        return this;
    }

    @Override
    public ProgramRecord value3(String value) {
        setProgramTitle(value);
        return this;
    }

    @Override
    public ProgramRecord value4(String value) {
        setMajor(value);
        return this;
    }

    @Override
    public ProgramRecord values(Integer value1, Integer value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProgramRecord
     */
    public ProgramRecord() {
        super(Program.PROGRAM);
    }

    /**
     * Create a detached, initialised ProgramRecord
     */
    public ProgramRecord(Integer programId, Integer programCode, String programTitle, String major) {
        super(Program.PROGRAM);

        set(0, programId);
        set(1, programCode);
        set(2, programTitle);
        set(3, major);
    }
}
