/*
 * This file is generated by jOOQ.
 */
package org.ssglobal.revalida.codes.model.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Subject implements Serializable {

    private static final long serialVersionUID = -110072396;

    private Integer subjectId;
    private String  subjectCode;
    private String  subjectTitle;
    private Integer unit;
    private Boolean activeDeactive;

    public Subject() {}

    public Subject(Subject value) {
        this.subjectId = value.subjectId;
        this.subjectCode = value.subjectCode;
        this.subjectTitle = value.subjectTitle;
        this.unit = value.unit;
        this.activeDeactive = value.activeDeactive;
    }

    public Subject(
        Integer subjectId,
        String  subjectCode,
        String  subjectTitle,
        Integer unit,
        Boolean activeDeactive
    ) {
        this.subjectId = subjectId;
        this.subjectCode = subjectCode;
        this.subjectTitle = subjectTitle;
        this.unit = unit;
        this.activeDeactive = activeDeactive;
    }

    public Integer getSubjectId() {
        return this.subjectId;
    }

    public Subject setSubjectId(Integer subjectId) {
        this.subjectId = subjectId;
        return this;
    }

    public String getSubjectCode() {
        return this.subjectCode;
    }

    public Subject setSubjectCode(String subjectCode) {
        this.subjectCode = subjectCode;
        return this;
    }

    public String getSubjectTitle() {
        return this.subjectTitle;
    }

    public Subject setSubjectTitle(String subjectTitle) {
        this.subjectTitle = subjectTitle;
        return this;
    }

    public Integer getUnit() {
        return this.unit;
    }

    public Subject setUnit(Integer unit) {
        this.unit = unit;
        return this;
    }

    public Boolean getActiveDeactive() {
        return this.activeDeactive;
    }

    public Subject setActiveDeactive(Boolean activeDeactive) {
        this.activeDeactive = activeDeactive;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Subject other = (Subject) obj;
        if (subjectId == null) {
            if (other.subjectId != null)
                return false;
        }
        else if (!subjectId.equals(other.subjectId))
            return false;
        if (subjectCode == null) {
            if (other.subjectCode != null)
                return false;
        }
        else if (!subjectCode.equals(other.subjectCode))
            return false;
        if (subjectTitle == null) {
            if (other.subjectTitle != null)
                return false;
        }
        else if (!subjectTitle.equals(other.subjectTitle))
            return false;
        if (unit == null) {
            if (other.unit != null)
                return false;
        }
        else if (!unit.equals(other.unit))
            return false;
        if (activeDeactive == null) {
            if (other.activeDeactive != null)
                return false;
        }
        else if (!activeDeactive.equals(other.activeDeactive))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.subjectId == null) ? 0 : this.subjectId.hashCode());
        result = prime * result + ((this.subjectCode == null) ? 0 : this.subjectCode.hashCode());
        result = prime * result + ((this.subjectTitle == null) ? 0 : this.subjectTitle.hashCode());
        result = prime * result + ((this.unit == null) ? 0 : this.unit.hashCode());
        result = prime * result + ((this.activeDeactive == null) ? 0 : this.activeDeactive.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Subject (");

        sb.append(subjectId);
        sb.append(", ").append(subjectCode);
        sb.append(", ").append(subjectTitle);
        sb.append(", ").append(unit);
        sb.append(", ").append(activeDeactive);

        sb.append(")");
        return sb.toString();
    }
}
