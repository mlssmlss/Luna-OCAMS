/*
 * This file is generated by jOOQ.
 */
package org.ssglobal.revalida.codes.model.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.ssglobal.revalida.codes.model.tables.Subject;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SubjectRecord extends UpdatableRecordImpl<SubjectRecord> implements Record5<Integer, String, String, Integer, Boolean> {

    private static final long serialVersionUID = -774382285;

    /**
     * Setter for <code>public.subject.subject_id</code>.
     */
    public SubjectRecord setSubjectId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.subject.subject_id</code>.
     */
    public Integer getSubjectId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.subject.subject_code</code>.
     */
    public SubjectRecord setSubjectCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.subject.subject_code</code>.
     */
    public String getSubjectCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.subject.subject_title</code>.
     */
    public SubjectRecord setSubjectTitle(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.subject.subject_title</code>.
     */
    public String getSubjectTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.subject.unit</code>.
     */
    public SubjectRecord setUnit(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.subject.unit</code>.
     */
    public Integer getUnit() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.subject.active_deactive</code>.
     */
    public SubjectRecord setActiveDeactive(Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.subject.active_deactive</code>.
     */
    public Boolean getActiveDeactive() {
        return (Boolean) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, Integer, Boolean> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, Integer, Boolean> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Subject.SUBJECT.SUBJECT_ID;
    }

    @Override
    public Field<String> field2() {
        return Subject.SUBJECT.SUBJECT_CODE;
    }

    @Override
    public Field<String> field3() {
        return Subject.SUBJECT.SUBJECT_TITLE;
    }

    @Override
    public Field<Integer> field4() {
        return Subject.SUBJECT.UNIT;
    }

    @Override
    public Field<Boolean> field5() {
        return Subject.SUBJECT.ACTIVE_DEACTIVE;
    }

    @Override
    public Integer component1() {
        return getSubjectId();
    }

    @Override
    public String component2() {
        return getSubjectCode();
    }

    @Override
    public String component3() {
        return getSubjectTitle();
    }

    @Override
    public Integer component4() {
        return getUnit();
    }

    @Override
    public Boolean component5() {
        return getActiveDeactive();
    }

    @Override
    public Integer value1() {
        return getSubjectId();
    }

    @Override
    public String value2() {
        return getSubjectCode();
    }

    @Override
    public String value3() {
        return getSubjectTitle();
    }

    @Override
    public Integer value4() {
        return getUnit();
    }

    @Override
    public Boolean value5() {
        return getActiveDeactive();
    }

    @Override
    public SubjectRecord value1(Integer value) {
        setSubjectId(value);
        return this;
    }

    @Override
    public SubjectRecord value2(String value) {
        setSubjectCode(value);
        return this;
    }

    @Override
    public SubjectRecord value3(String value) {
        setSubjectTitle(value);
        return this;
    }

    @Override
    public SubjectRecord value4(Integer value) {
        setUnit(value);
        return this;
    }

    @Override
    public SubjectRecord value5(Boolean value) {
        setActiveDeactive(value);
        return this;
    }

    @Override
    public SubjectRecord values(Integer value1, String value2, String value3, Integer value4, Boolean value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SubjectRecord
     */
    public SubjectRecord() {
        super(Subject.SUBJECT);
    }

    /**
     * Create a detached, initialised SubjectRecord
     */
    public SubjectRecord(Integer subjectId, String subjectCode, String subjectTitle, Integer unit, Boolean activeDeactive) {
        super(Subject.SUBJECT);

        set(0, subjectId);
        set(1, subjectCode);
        set(2, subjectTitle);
        set(3, unit);
        set(4, activeDeactive);
    }
}
