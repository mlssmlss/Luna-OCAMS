/*
 * This file is generated by jOOQ.
 */
package org.ssglobal.revalida.codes.model.tables.records;


import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import org.ssglobal.revalida.codes.model.tables.Professor;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProfessorRecord extends UpdatableRecordImpl<ProfessorRecord> implements Record10<Integer, String, Integer, String, String, String, LocalDate, String, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.professor.professor_id</code>.
     */
    public ProfessorRecord setProfessorId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.professor_id</code>.
     */
    public Integer getProfessorId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.professor.professor_name</code>.
     */
    public ProfessorRecord setProfessorName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.professor_name</code>.
     */
    public String getProfessorName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.professor.professor_number</code>.
     */
    public ProfessorRecord setProfessorNumber(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.professor_number</code>.
     */
    public Integer getProfessorNumber() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.professor.work</code>.
     */
    public ProfessorRecord setWork(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.work</code>.
     */
    public String getWork() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.professor.gender</code>.
     */
    public ProfessorRecord setGender(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.gender</code>.
     */
    public String getGender() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.professor.status</code>.
     */
    public ProfessorRecord setStatus(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.status</code>.
     */
    public String getStatus() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.professor.birthdate</code>.
     */
    public ProfessorRecord setBirthdate(LocalDate value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.birthdate</code>.
     */
    public LocalDate getBirthdate() {
        return (LocalDate) get(6);
    }

    /**
     * Setter for <code>public.professor.professor_load</code>.
     */
    public ProfessorRecord setProfessorLoad(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.professor_load</code>.
     */
    public String getProfessorLoad() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.professor.grades</code>.
     */
    public ProfessorRecord setGrades(Integer value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.grades</code>.
     */
    public Integer getGrades() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>public.professor.subject_details</code>.
     */
    public ProfessorRecord setSubjectDetails(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.subject_details</code>.
     */
    public String getSubjectDetails() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, Integer, String, String, String, LocalDate, String, Integer, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, String, Integer, String, String, String, LocalDate, String, Integer, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Professor.PROFESSOR.PROFESSOR_ID;
    }

    @Override
    public Field<String> field2() {
        return Professor.PROFESSOR.PROFESSOR_NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Professor.PROFESSOR.PROFESSOR_NUMBER;
    }

    @Override
    public Field<String> field4() {
        return Professor.PROFESSOR.WORK;
    }

    @Override
    public Field<String> field5() {
        return Professor.PROFESSOR.GENDER;
    }

    @Override
    public Field<String> field6() {
        return Professor.PROFESSOR.STATUS;
    }

    @Override
    public Field<LocalDate> field7() {
        return Professor.PROFESSOR.BIRTHDATE;
    }

    @Override
    public Field<String> field8() {
        return Professor.PROFESSOR.PROFESSOR_LOAD;
    }

    @Override
    public Field<Integer> field9() {
        return Professor.PROFESSOR.GRADES;
    }

    @Override
    public Field<String> field10() {
        return Professor.PROFESSOR.SUBJECT_DETAILS;
    }

    @Override
    public Integer component1() {
        return getProfessorId();
    }

    @Override
    public String component2() {
        return getProfessorName();
    }

    @Override
    public Integer component3() {
        return getProfessorNumber();
    }

    @Override
    public String component4() {
        return getWork();
    }

    @Override
    public String component5() {
        return getGender();
    }

    @Override
    public String component6() {
        return getStatus();
    }

    @Override
    public LocalDate component7() {
        return getBirthdate();
    }

    @Override
    public String component8() {
        return getProfessorLoad();
    }

    @Override
    public Integer component9() {
        return getGrades();
    }

    @Override
    public String component10() {
        return getSubjectDetails();
    }

    @Override
    public Integer value1() {
        return getProfessorId();
    }

    @Override
    public String value2() {
        return getProfessorName();
    }

    @Override
    public Integer value3() {
        return getProfessorNumber();
    }

    @Override
    public String value4() {
        return getWork();
    }

    @Override
    public String value5() {
        return getGender();
    }

    @Override
    public String value6() {
        return getStatus();
    }

    @Override
    public LocalDate value7() {
        return getBirthdate();
    }

    @Override
    public String value8() {
        return getProfessorLoad();
    }

    @Override
    public Integer value9() {
        return getGrades();
    }

    @Override
    public String value10() {
        return getSubjectDetails();
    }

    @Override
    public ProfessorRecord value1(Integer value) {
        setProfessorId(value);
        return this;
    }

    @Override
    public ProfessorRecord value2(String value) {
        setProfessorName(value);
        return this;
    }

    @Override
    public ProfessorRecord value3(Integer value) {
        setProfessorNumber(value);
        return this;
    }

    @Override
    public ProfessorRecord value4(String value) {
        setWork(value);
        return this;
    }

    @Override
    public ProfessorRecord value5(String value) {
        setGender(value);
        return this;
    }

    @Override
    public ProfessorRecord value6(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public ProfessorRecord value7(LocalDate value) {
        setBirthdate(value);
        return this;
    }

    @Override
    public ProfessorRecord value8(String value) {
        setProfessorLoad(value);
        return this;
    }

    @Override
    public ProfessorRecord value9(Integer value) {
        setGrades(value);
        return this;
    }

    @Override
    public ProfessorRecord value10(String value) {
        setSubjectDetails(value);
        return this;
    }

    @Override
    public ProfessorRecord values(Integer value1, String value2, Integer value3, String value4, String value5, String value6, LocalDate value7, String value8, Integer value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProfessorRecord
     */
    public ProfessorRecord() {
        super(Professor.PROFESSOR);
    }

    /**
     * Create a detached, initialised ProfessorRecord
     */
    public ProfessorRecord(Integer professorId, String professorName, Integer professorNumber, String work, String gender, String status, LocalDate birthdate, String professorLoad, Integer grades, String subjectDetails) {
        super(Professor.PROFESSOR);

        setProfessorId(professorId);
        setProfessorName(professorName);
        setProfessorNumber(professorNumber);
        setWork(work);
        setGender(gender);
        setStatus(status);
        setBirthdate(birthdate);
        setProfessorLoad(professorLoad);
        setGrades(grades);
        setSubjectDetails(subjectDetails);
    }

    /**
     * Create a detached, initialised ProfessorRecord
     */
    public ProfessorRecord(org.ssglobal.revalida.codes.model.tables.pojos.Professor value) {
        super(Professor.PROFESSOR);

        if (value != null) {
            setProfessorId(value.getProfessorId());
            setProfessorName(value.getProfessorName());
            setProfessorNumber(value.getProfessorNumber());
            setWork(value.getWork());
            setGender(value.getGender());
            setStatus(value.getStatus());
            setBirthdate(value.getBirthdate());
            setProfessorLoad(value.getProfessorLoad());
            setGrades(value.getGrades());
            setSubjectDetails(value.getSubjectDetails());
        }
    }
}
