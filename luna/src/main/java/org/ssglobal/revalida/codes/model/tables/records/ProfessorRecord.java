/*
 * This file is generated by jOOQ.
 */
package org.ssglobal.revalida.codes.model.tables.records;


import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;
import org.ssglobal.revalida.codes.model.tables.Professor;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProfessorRecord extends UpdatableRecordImpl<ProfessorRecord> implements Record11<Integer, Integer, Integer, String, String, String, String, LocalDate, String, Boolean, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.professor.professor_id</code>.
     */
    public ProfessorRecord setProfessorId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.professor_id</code>.
     */
    public Integer getProfessorId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.professor.student_id</code>.
     */
    public ProfessorRecord setStudentId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.student_id</code>.
     */
    public Integer getStudentId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.professor.grade_id</code>.
     */
    public ProfessorRecord setGradeId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.grade_id</code>.
     */
    public Integer getGradeId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.professor.professor_number</code>.
     */
    public ProfessorRecord setProfessorNumber(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.professor_number</code>.
     */
    public String getProfessorNumber() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.professor.professor_name</code>.
     */
    public ProfessorRecord setProfessorName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.professor_name</code>.
     */
    public String getProfessorName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.professor.gender</code>.
     */
    public ProfessorRecord setGender(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.gender</code>.
     */
    public String getGender() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.professor.status</code>.
     */
    public ProfessorRecord setStatus(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.status</code>.
     */
    public String getStatus() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.professor.birthdate</code>.
     */
    public ProfessorRecord setBirthdate(LocalDate value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.birthdate</code>.
     */
    public LocalDate getBirthdate() {
        return (LocalDate) get(7);
    }

    /**
     * Setter for <code>public.professor.password</code>.
     */
    public ProfessorRecord setPassword(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.password</code>.
     */
    public String getPassword() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.professor.active_deactive</code>.
     */
    public ProfessorRecord setActiveDeactive(Boolean value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.active_deactive</code>.
     */
    public Boolean getActiveDeactive() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>public.professor.type</code>.
     */
    public ProfessorRecord setType(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.professor.type</code>.
     */
    public String getType() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, Integer, Integer, String, String, String, String, LocalDate, String, Boolean, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Integer, Integer, Integer, String, String, String, String, LocalDate, String, Boolean, String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Professor.PROFESSOR.PROFESSOR_ID;
    }

    @Override
    public Field<Integer> field2() {
        return Professor.PROFESSOR.STUDENT_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Professor.PROFESSOR.GRADE_ID;
    }

    @Override
    public Field<String> field4() {
        return Professor.PROFESSOR.PROFESSOR_NUMBER;
    }

    @Override
    public Field<String> field5() {
        return Professor.PROFESSOR.PROFESSOR_NAME;
    }

    @Override
    public Field<String> field6() {
        return Professor.PROFESSOR.GENDER;
    }

    @Override
    public Field<String> field7() {
        return Professor.PROFESSOR.STATUS;
    }

    @Override
    public Field<LocalDate> field8() {
        return Professor.PROFESSOR.BIRTHDATE;
    }

    @Override
    public Field<String> field9() {
        return Professor.PROFESSOR.PASSWORD;
    }

    @Override
    public Field<Boolean> field10() {
        return Professor.PROFESSOR.ACTIVE_DEACTIVE;
    }

    @Override
    public Field<String> field11() {
        return Professor.PROFESSOR.TYPE;
    }

    @Override
    public Integer component1() {
        return getProfessorId();
    }

    @Override
    public Integer component2() {
        return getStudentId();
    }

    @Override
    public Integer component3() {
        return getGradeId();
    }

    @Override
    public String component4() {
        return getProfessorNumber();
    }

    @Override
    public String component5() {
        return getProfessorName();
    }

    @Override
    public String component6() {
        return getGender();
    }

    @Override
    public String component7() {
        return getStatus();
    }

    @Override
    public LocalDate component8() {
        return getBirthdate();
    }

    @Override
    public String component9() {
        return getPassword();
    }

    @Override
    public Boolean component10() {
        return getActiveDeactive();
    }

    @Override
    public String component11() {
        return getType();
    }

    @Override
    public Integer value1() {
        return getProfessorId();
    }

    @Override
    public Integer value2() {
        return getStudentId();
    }

    @Override
    public Integer value3() {
        return getGradeId();
    }

    @Override
    public String value4() {
        return getProfessorNumber();
    }

    @Override
    public String value5() {
        return getProfessorName();
    }

    @Override
    public String value6() {
        return getGender();
    }

    @Override
    public String value7() {
        return getStatus();
    }

    @Override
    public LocalDate value8() {
        return getBirthdate();
    }

    @Override
    public String value9() {
        return getPassword();
    }

    @Override
    public Boolean value10() {
        return getActiveDeactive();
    }

    @Override
    public String value11() {
        return getType();
    }

    @Override
    public ProfessorRecord value1(Integer value) {
        setProfessorId(value);
        return this;
    }

    @Override
    public ProfessorRecord value2(Integer value) {
        setStudentId(value);
        return this;
    }

    @Override
    public ProfessorRecord value3(Integer value) {
        setGradeId(value);
        return this;
    }

    @Override
    public ProfessorRecord value4(String value) {
        setProfessorNumber(value);
        return this;
    }

    @Override
    public ProfessorRecord value5(String value) {
        setProfessorName(value);
        return this;
    }

    @Override
    public ProfessorRecord value6(String value) {
        setGender(value);
        return this;
    }

    @Override
    public ProfessorRecord value7(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public ProfessorRecord value8(LocalDate value) {
        setBirthdate(value);
        return this;
    }

    @Override
    public ProfessorRecord value9(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public ProfessorRecord value10(Boolean value) {
        setActiveDeactive(value);
        return this;
    }

    @Override
    public ProfessorRecord value11(String value) {
        setType(value);
        return this;
    }

    @Override
    public ProfessorRecord values(Integer value1, Integer value2, Integer value3, String value4, String value5, String value6, String value7, LocalDate value8, String value9, Boolean value10, String value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProfessorRecord
     */
    public ProfessorRecord() {
        super(Professor.PROFESSOR);
    }

    /**
     * Create a detached, initialised ProfessorRecord
     */
    public ProfessorRecord(Integer professorId, Integer studentId, Integer gradeId, String professorNumber, String professorName, String gender, String status, LocalDate birthdate, String password, Boolean activeDeactive, String type) {
        super(Professor.PROFESSOR);

        setProfessorId(professorId);
        setStudentId(studentId);
        setGradeId(gradeId);
        setProfessorNumber(professorNumber);
        setProfessorName(professorName);
        setGender(gender);
        setStatus(status);
        setBirthdate(birthdate);
        setPassword(password);
        setActiveDeactive(activeDeactive);
        setType(type);
    }

    /**
     * Create a detached, initialised ProfessorRecord
     */
    public ProfessorRecord(org.ssglobal.revalida.codes.model.tables.pojos.Professor value) {
        super(Professor.PROFESSOR);

        if (value != null) {
            setProfessorId(value.getProfessorId());
            setStudentId(value.getStudentId());
            setGradeId(value.getGradeId());
            setProfessorNumber(value.getProfessorNumber());
            setProfessorName(value.getProfessorName());
            setGender(value.getGender());
            setStatus(value.getStatus());
            setBirthdate(value.getBirthdate());
            setPassword(value.getPassword());
            setActiveDeactive(value.getActiveDeactive());
            setType(value.getType());
        }
    }
}
