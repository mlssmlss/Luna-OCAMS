/*
 * This file is generated by jOOQ.
 */
package org.ssglobal.revalida.codes.model.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.ssglobal.revalida.codes.model.tables.Admin;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdminRecord extends UpdatableRecordImpl<AdminRecord> implements Record6<Integer, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.admin.admin_id</code>.
     */
    public AdminRecord setAdminId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.admin.admin_id</code>.
     */
    public Integer getAdminId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.admin.username</code>.
     */
    public AdminRecord setUsername(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.admin.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.admin.password</code>.
     */
    public AdminRecord setPassword(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.admin.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.admin.firstname</code>.
     */
    public AdminRecord setFirstname(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.admin.firstname</code>.
     */
    public String getFirstname() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.admin.lastname</code>.
     */
    public AdminRecord setLastname(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.admin.lastname</code>.
     */
    public String getLastname() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.admin.type</code>.
     */
    public AdminRecord setType(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.admin.type</code>.
     */
    public String getType() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Admin.ADMIN.ADMIN_ID;
    }

    @Override
    public Field<String> field2() {
        return Admin.ADMIN.USERNAME;
    }

    @Override
    public Field<String> field3() {
        return Admin.ADMIN.PASSWORD;
    }

    @Override
    public Field<String> field4() {
        return Admin.ADMIN.FIRSTNAME;
    }

    @Override
    public Field<String> field5() {
        return Admin.ADMIN.LASTNAME;
    }

    @Override
    public Field<String> field6() {
        return Admin.ADMIN.TYPE;
    }

    @Override
    public Integer component1() {
        return getAdminId();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public String component4() {
        return getFirstname();
    }

    @Override
    public String component5() {
        return getLastname();
    }

    @Override
    public String component6() {
        return getType();
    }

    @Override
    public Integer value1() {
        return getAdminId();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public String value4() {
        return getFirstname();
    }

    @Override
    public String value5() {
        return getLastname();
    }

    @Override
    public String value6() {
        return getType();
    }

    @Override
    public AdminRecord value1(Integer value) {
        setAdminId(value);
        return this;
    }

    @Override
    public AdminRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public AdminRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public AdminRecord value4(String value) {
        setFirstname(value);
        return this;
    }

    @Override
    public AdminRecord value5(String value) {
        setLastname(value);
        return this;
    }

    @Override
    public AdminRecord value6(String value) {
        setType(value);
        return this;
    }

    @Override
    public AdminRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AdminRecord
     */
    public AdminRecord() {
        super(Admin.ADMIN);
    }

    /**
     * Create a detached, initialised AdminRecord
     */
    public AdminRecord(Integer adminId, String username, String password, String firstname, String lastname, String type) {
        super(Admin.ADMIN);

        setAdminId(adminId);
        setUsername(username);
        setPassword(password);
        setFirstname(firstname);
        setLastname(lastname);
        setType(type);
    }

    /**
     * Create a detached, initialised AdminRecord
     */
    public AdminRecord(org.ssglobal.revalida.codes.model.tables.pojos.Admin value) {
        super(Admin.ADMIN);

        if (value != null) {
            setAdminId(value.getAdminId());
            setUsername(value.getUsername());
            setPassword(value.getPassword());
            setFirstname(value.getFirstname());
            setLastname(value.getLastname());
            setType(value.getType());
        }
    }
}
